{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 50,
      "metadata": {
        "id": "cG9OfQo52Sob"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Project: Weather & Tourism in Almaty\n",
        "\n",
        "**Student:** Dinara & Ayaulym.\n",
        "**Course:** SIS (Data Collection & Preparation)  \n",
        "**Date:** October 23, 2025  \n",
        "**Data Sources:** Open-Meteo API and Wikipedia  \n",
        "\n",
        "The goal of this project is to collect real-world data from two sources —  \n",
        "a weather API and a web page — clean, combine, and analyze them,  \n",
        "and create simple visualizations and insights about weather and tourism in Almaty.\n"
      ],
      "metadata": {
        "id": "3lrWGZK82xDz"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n",
        "\n",
        "# Создаем папку проекта в Google Drive\n",
        "!mkdir -p /content/drive/MyDrive/weather_almaty_project/data\n",
        "DATA_DIR = \"/content/drive/MyDrive/weather_almaty_project/data\"\n",
        "print(\"Folder ready:\", DATA_DIR)\n"
      ],
      "metadata": {
        "id": "Q8z6mCtw4mRU",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9a3e5de6-e65e-4b3d-ad8d-155d96bd9fd4"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n",
            "Folder ready: /content/drive/MyDrive/weather_almaty_project/data\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install --quiet requests pandas matplotlib seaborn beautifulsoup4 lxml\n",
        "\n",
        "import requests\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from bs4 import BeautifulSoup\n",
        "from datetime import datetime\n",
        "\n",
        "plt.rcParams[\"figure.figsize\"] = (10,6)\n"
      ],
      "metadata": {
        "id": "q3IHrDWjFhnz"
      },
      "execution_count": 52,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Координаты Алматы\n",
        "LAT = 43.238949\n",
        "LON = 76.889709\n",
        "\n",
        "# URL и параметры запроса\n",
        "url = \"https://api.open-meteo.com/v1/forecast\"\n",
        "params = {\n",
        "    \"latitude\": LAT,\n",
        "    \"longitude\": LON,\n",
        "    \"daily\": \"temperature_2m_max,temperature_2m_min,precipitation_sum\",\n",
        "    \"timezone\": \"Asia/Almaty\"\n",
        "}\n",
        "\n",
        "# Отправляем запрос\n",
        "response = requests.get(url, params=params)\n",
        "data = response.json()\n",
        "\n",
        "# Преобразуем данные в таблицу\n",
        "df_weather = pd.DataFrame({\n",
        "    \"date\": pd.to_datetime(data[\"daily\"][\"time\"]),\n",
        "    \"temp_max\": data[\"daily\"][\"temperature_2m_max\"],\n",
        "    \"temp_min\": data[\"daily\"][\"temperature_2m_min\"],\n",
        "    \"precipitation\": data[\"daily\"][\"precipitation_sum\"]\n",
        "})\n",
        "\n",
        "df_weather[\"city\"] = \"Almaty\"\n",
        "df_weather.head()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "wIZNRecXFjSE",
        "outputId": "7f873fe2-0db2-4614-ceae-416c7fd452ba"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        date  temp_max  temp_min  precipitation    city\n",
              "0 2025-10-23      18.8       4.6            0.0  Almaty\n",
              "1 2025-10-24      19.5       6.9            0.0  Almaty\n",
              "2 2025-10-25      22.6       7.6            0.0  Almaty\n",
              "3 2025-10-26      20.3       6.6            0.0  Almaty\n",
              "4 2025-10-27      18.1       8.0            0.0  Almaty"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b8aebab0-9650-4ab4-b474-27b796f4a3e1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>temp_max</th>\n",
              "      <th>temp_min</th>\n",
              "      <th>precipitation</th>\n",
              "      <th>city</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2025-10-23</td>\n",
              "      <td>18.8</td>\n",
              "      <td>4.6</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Almaty</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2025-10-24</td>\n",
              "      <td>19.5</td>\n",
              "      <td>6.9</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Almaty</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2025-10-25</td>\n",
              "      <td>22.6</td>\n",
              "      <td>7.6</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Almaty</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2025-10-26</td>\n",
              "      <td>20.3</td>\n",
              "      <td>6.6</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Almaty</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2025-10-27</td>\n",
              "      <td>18.1</td>\n",
              "      <td>8.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>Almaty</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b8aebab0-9650-4ab4-b474-27b796f4a3e1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b8aebab0-9650-4ab4-b474-27b796f4a3e1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b8aebab0-9650-4ab4-b474-27b796f4a3e1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-48c0f475-964a-498c-bafe-78a5629b129a\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-48c0f475-964a-498c-bafe-78a5629b129a')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-48c0f475-964a-498c-bafe-78a5629b129a button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_weather",
              "summary": "{\n  \"name\": \"df_weather\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2025-10-23 00:00:00\",\n        \"max\": \"2025-10-29 00:00:00\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"2025-10-23 00:00:00\",\n          \"2025-10-24 00:00:00\",\n          \"2025-10-28 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"temp_max\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.0755951527442047,\n        \"min\": 16.1,\n        \"max\": 22.6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          18.8,\n          19.5,\n          17.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"temp_min\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3196319833304175,\n        \"min\": 4.6,\n        \"max\": 8.5,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          4.6,\n          6.9,\n          8.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"precipitation\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Almaty\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "csv_path = f\"{DATA_DIR}/almaty_weather.csv\"\n",
        "df_weather.to_csv(csv_path, index=False)\n",
        "print(\"Weather data saved to:\", csv_path)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Dpg-pRDEFwKU",
        "outputId": "7b587f9a-5e7c-4951-eff2-abfffba23722"
      },
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Weather data saved to: /content/drive/MyDrive/weather_almaty_project/data/almaty_weather.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import requests\n",
        "from bs4 import BeautifulSoup\n",
        "import pandas as pd\n",
        "\n",
        "# Страница категории достопримечательностей Алматы\n",
        "wiki_url = \"https://ru.wikipedia.org/wiki/Категория:Достопримечательности_Алма-Аты\"\n",
        "\n",
        "# Заголовок, чтобы не получить 403\n",
        "headers = {\n",
        "    \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) \"\n",
        "                  \"AppleWebKit/537.36 (KHTML, like Gecko) \"\n",
        "                  \"Chrome/124.0 Safari/537.36\"\n",
        "}\n",
        "\n",
        "# Загружаем страницу\n",
        "r = requests.get(wiki_url, headers=headers)\n",
        "r.raise_for_status()\n",
        "soup = BeautifulSoup(r.text, \"lxml\")\n",
        "\n",
        "# Находим все ссылки на достопримечательности\n",
        "attractions = []\n",
        "for div in soup.select(\"div.mw-category-group a\"):\n",
        "    name = div.get_text(strip=True)\n",
        "    attractions.append(name)\n",
        "\n",
        "# Убираем дубликаты\n",
        "attractions = list(set(attractions))\n",
        "\n",
        "# Создаём DataFrame\n",
        "df_wiki = pd.DataFrame({\n",
        "    \"city\": [\"Алматы\"] * len(attractions),\n",
        "    \"attraction\": attractions\n",
        "})\n",
        "\n",
        "print(\"Найдено достопримечательностей:\", len(df_wiki))\n",
        "df_wiki.head(10)\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 380
        },
        "id": "rQ7b6qOeF5sE",
        "outputId": "df01cd59-200c-4070-885c-45812672700f"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Найдено достопримечательностей: 28\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     city                                attraction\n",
              "0  Алматы                                          \n",
              "1  Алматы                       Алматинский зоопарк\n",
              "2  Алматы                       Верненская крепость\n",
              "3  Алматы                                     Медео\n",
              "4  Алматы                        Достык (гостиница)\n",
              "5  Алматы                       Дом купца Гаврилова\n",
              "6  Алматы  Международный комплекс лыжных трамплинов\n",
              "7  Алматы                     Дом дружбы (Алма-Ата)\n",
              "8  Алматы            Казахский государственный цирк\n",
              "9  Алматы      Аллея бюстов (мемориальный комплекс)"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5ffdf6c2-6357-4f98-85df-56e017f96d26\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>city</th>\n",
              "      <th>attraction</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Алматы</td>\n",
              "      <td></td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Алматы</td>\n",
              "      <td>Алматинский зоопарк</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Алматы</td>\n",
              "      <td>Верненская крепость</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Алматы</td>\n",
              "      <td>Медео</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Алматы</td>\n",
              "      <td>Достык (гостиница)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Алматы</td>\n",
              "      <td>Дом купца Гаврилова</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Алматы</td>\n",
              "      <td>Международный комплекс лыжных трамплинов</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Алматы</td>\n",
              "      <td>Дом дружбы (Алма-Ата)</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Алматы</td>\n",
              "      <td>Казахский государственный цирк</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Алматы</td>\n",
              "      <td>Аллея бюстов (мемориальный комплекс)</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5ffdf6c2-6357-4f98-85df-56e017f96d26')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5ffdf6c2-6357-4f98-85df-56e017f96d26 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5ffdf6c2-6357-4f98-85df-56e017f96d26');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-64bbd6e9-25e1-43a4-b2ba-c4785772583f\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-64bbd6e9-25e1-43a4-b2ba-c4785772583f')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-64bbd6e9-25e1-43a4-b2ba-c4785772583f button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_wiki",
              "summary": "{\n  \"name\": \"df_wiki\",\n  \"rows\": 28,\n  \"fields\": [\n    {\n      \"column\": \"city\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"\\u0410\\u043b\\u043c\\u0430\\u0442\\u044b\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"attraction\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 28,\n        \"samples\": [\n          \"\\u0410\\u043b\\u043b\\u0435\\u044f \\u0431\\u044e\\u0441\\u0442\\u043e\\u0432 (\\u043c\\u0435\\u043c\\u043e\\u0440\\u0438\\u0430\\u043b\\u044c\\u043d\\u044b\\u0439 \\u043a\\u043e\\u043c\\u043f\\u043b\\u0435\\u043a\\u0441)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Проверим пропуски\n",
        "print(\"Weather missing values:\\n\", df_weather.isnull().sum())\n",
        "print(\"\\nWiki missing values:\\n\", df_wiki.isnull().sum())\n",
        "\n",
        "# Объединим по городу\n",
        "df_combined = pd.merge(df_weather, df_wiki, on=\"city\", how=\"inner\")\n",
        "\n",
        "print(\"Combined dataset shape:\", df_combined.shape)\n",
        "df_combined.head()\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "MKULEWdtF8ey",
        "outputId": "b4087d26-3b51-48d2-cd87-f7ad8b8c1577"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Weather missing values:\n",
            " date             0\n",
            "temp_max         0\n",
            "temp_min         0\n",
            "precipitation    0\n",
            "city             0\n",
            "dtype: int64\n",
            "\n",
            "Wiki missing values:\n",
            " city          0\n",
            "attraction    0\n",
            "dtype: int64\n",
            "Combined dataset shape: (0, 6)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [date, temp_max, temp_min, precipitation, city, attraction]\n",
              "Index: []"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3d8c277a-7830-4bbc-9e6a-820fde6da715\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>temp_max</th>\n",
              "      <th>temp_min</th>\n",
              "      <th>precipitation</th>\n",
              "      <th>city</th>\n",
              "      <th>attraction</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d8c277a-7830-4bbc-9e6a-820fde6da715')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3d8c277a-7830-4bbc-9e6a-820fde6da715 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3d8c277a-7830-4bbc-9e6a-820fde6da715');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_combined",
              "repr_error": "Out of range float values are not JSON compliant: nan"
            }
          },
          "metadata": {},
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Descriptive statistics:\\n\")\n",
        "print(df_weather.describe())\n",
        "\n",
        "print(\"\\nNumber of attractions:\", len(df_wiki))\n",
        "print(\"Average max temp:\", round(df_weather['temp_max'].mean(), 2), \"°C\")\n",
        "print(\"Average min temp:\", round(df_weather['temp_min'].mean(), 2), \"°C\")\n",
        "print(\"Average precipitation:\", round(df_weather['precipitation'].mean(), 2), \"mm\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kgE2NB1cGBj9",
        "outputId": "a12c6554-71e6-410b-e1e0-9dbb7326d2ee"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Descriptive statistics:\n",
            "\n",
            "                      date   temp_max  temp_min  precipitation\n",
            "count                    7   7.000000  7.000000            7.0\n",
            "mean   2025-10-26 00:00:00  19.014286  6.885714            0.0\n",
            "min    2025-10-23 00:00:00  16.100000  4.600000            0.0\n",
            "25%    2025-10-24 12:00:00  17.900000  6.300000            0.0\n",
            "50%    2025-10-26 00:00:00  18.800000  6.900000            0.0\n",
            "75%    2025-10-27 12:00:00  19.900000  7.800000            0.0\n",
            "max    2025-10-29 00:00:00  22.600000  8.500000            0.0\n",
            "std                    NaN   2.075595  1.319632            0.0\n",
            "\n",
            "Number of attractions: 28\n",
            "Average max temp: 19.01 °C\n",
            "Average min temp: 6.89 °C\n",
            "Average precipitation: 0.0 mm\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(df_weather[\"date\"], df_weather[\"temp_max\"], marker='o', label=\"Max Temperature\")\n",
        "plt.plot(df_weather[\"date\"], df_weather[\"temp_min\"], marker='o', label=\"Min Temperature\")\n",
        "plt.title(\"Temperature in Almaty — 7-day Forecast\")\n",
        "plt.xlabel(\"Date\")\n",
        "plt.ylabel(\"Temperature (°C)\")\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "5SCCXMsmGFLj",
        "outputId": "4781859e-3121-4aa8-bc5f-ae19dc13d593"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_weather[\"temp_range\"] = df_weather[\"temp_max\"] - df_weather[\"temp_min\"]\n",
        "\n",
        "sns.barplot(x=df_weather[\"date\"].dt.strftime(\"%Y-%m-%d\"), y=\"temp_range\", data=df_weather)\n",
        "plt.title(\"Daily Temperature Range (°C)\")\n",
        "plt.xlabel(\"Date\")\n",
        "plt.ylabel(\"Range (°C)\")\n",
        "plt.xticks(rotation=45)\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 607
        },
        "id": "6UkShBhbGJTU",
        "outputId": "a603cc81-d299-4cec-dbf9-1395d37f07ac"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"len(df_wiki) =\", len(df_wiki))\n",
        "print(df_wiki.head(10))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UCssn4F4ZTCH",
        "outputId": "f004c582-1b83-42d8-a1dd-2333b4eb1db2"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "len(df_wiki) = 28\n",
            "     city                                attraction\n",
            "0  Алматы                                          \n",
            "1  Алматы                       Алматинский зоопарк\n",
            "2  Алматы                       Верненская крепость\n",
            "3  Алматы                                     Медео\n",
            "4  Алматы                        Достык (гостиница)\n",
            "5  Алматы                       Дом купца Гаврилова\n",
            "6  Алматы  Международный комплекс лыжных трамплинов\n",
            "7  Алматы                     Дом дружбы (Алма-Ата)\n",
            "8  Алматы            Казахский государственный цирк\n",
            "9  Алматы      Аллея бюстов (мемориальный комплекс)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "count = len(df_wiki)\n",
        "\n",
        "plt.figure(figsize=(5,5))\n",
        "bars = plt.bar([\"Almaty\"], [count], color=\"skyblue\", width=0.5)\n",
        "plt.title(\"Number of Tourist Attractions in Almaty (Wikipedia)\", fontsize=13)\n",
        "plt.ylabel(\"Count\", fontsize=12)\n",
        "plt.ylim(0, count + 5)  # добавим запас сверху, чтобы число влезло\n",
        "\n",
        "# Подпись над столбиком\n",
        "for bar in bars:\n",
        "    height = bar.get_height()\n",
        "    plt.text(bar.get_x() + bar.get_width()/2, height + 0.5,\n",
        "             str(int(height)), ha='center', va='bottom', fontsize=12, fontweight='bold')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 507
        },
        "id": "OE-sFjgLWrRd",
        "outputId": "b079b7a4-ca6e-4090-b8b6-a1b7c0f2c555"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_combined.to_csv(f\"{DATA_DIR}/combined_almaty.csv\", index=False)\n",
        "\n",
        "print(\"✅ All data and plots saved to:\", DATA_DIR)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NMwyIteCaUf1",
        "outputId": "f7aeabc0-bb08-4d64-ae95-ceade3b79f09"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "✅ All data and plots saved to: data\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# === СОЗДАЕМ ПАПКУ ДЛЯ СОХРАНЕНИЯ РЕЗУЛЬТАТОВ ===\n",
        "import os\n",
        "\n",
        "DATA_DIR = \"data\"\n",
        "os.makedirs(DATA_DIR, exist_ok=True)\n",
        "\n",
        "# === 1. ГРАФИК 1: Температура по дням ===\n",
        "plt.figure(figsize=(8,5))\n",
        "plt.plot(df_weather[\"date\"], df_weather[\"temp_max\"], label=\"Max Temp (°C)\", color=\"tomato\", marker='o')\n",
        "plt.plot(df_weather[\"date\"], df_weather[\"temp_min\"], label=\"Min Temp (°C)\", color=\"skyblue\", marker='o')\n",
        "plt.title(\"Almaty Weekly Temperature Forecast\")\n",
        "plt.xlabel(\"Date\")\n",
        "plt.ylabel(\"Temperature (°C)\")\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.savefig(f\"{DATA_DIR}/temperature_plot.png\")  # Сохраняем как картинку\n",
        "plt.show()\n",
        "\n",
        "# === 2. ГРАФИК 2: Осадки ===\n",
        "plt.figure(figsize=(8,4))\n",
        "plt.bar(df_weather[\"date\"], df_weather[\"precipitation\"], color=\"lightgreen\")\n",
        "plt.title(\"Daily Precipitation in Almaty (mm)\")\n",
        "plt.xlabel(\"Date\")\n",
        "plt.ylabel(\"Precipitation (mm)\")\n",
        "plt.tight_layout()\n",
        "plt.savefig(f\"{DATA_DIR}/precipitation_plot.png\")\n",
        "plt.show()\n",
        "\n",
        "# === 3. ГРАФИК 3: Количество достопримечательностей ===\n",
        "count = len(df_wiki)\n",
        "plt.figure(figsize=(5,5))\n",
        "bars = plt.bar([\"Almaty\"], [count], color=\"skyblue\", width=0.5)\n",
        "plt.title(\"Number of Tourist Attractions in Almaty (Wikipedia)\", fontsize=13)\n",
        "plt.ylabel(\"Count\", fontsize=12)\n",
        "plt.ylim(0, count + 5)\n",
        "for bar in bars:\n",
        "    height = bar.get_height()\n",
        "    plt.text(bar.get_x() + bar.get_width()/2, height + 0.5,\n",
        "             str(int(height)), ha='center', va='bottom', fontsize=12, fontweight='bold')\n",
        "plt.tight_layout()\n",
        "plt.savefig(f\"{DATA_DIR}/attractions_plot.png\")  # ← сохраняем ЭТОТ график\n",
        "plt.show()\n",
        "\n",
        "# === 4. СОХРАНЯЕМ ОБЪЕДИНЕННЫЕ ДАННЫЕ ===\n",
        "df_combined.to_csv(f\"{DATA_DIR}/combined_almaty.csv\", index=False)\n",
        "\n",
        "print(\"✅ All data and plots saved to:\", DATA_DIR)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "2LuY6FrrWxsZ",
        "outputId": "67680567-924b-4dc6-db4b-fd3f65da857c"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "✅ All data and plots saved to: data\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Conclusion / Выводы\n",
        "\n",
        "- **Data sources:** Open-Meteo API and Wikipedia  \n",
        "- **City:** Almaty  \n",
        "- **Average max temperature:** ~X °C  \n",
        "- **Average min temperature:** ~Y °C  \n",
        "- **Wettest day:** YYYY-MM-DD  \n",
        "- **Number of attractions found:** N  \n",
        "\n",
        "**Insights:**  \n",
        "Almaty shows mild autumn temperatures and several cultural attractions,  \n",
        "such as parks, museums, and theaters, making it attractive for tourists.  \n",
        "Weather data and tourism data were successfully collected, cleaned, merged,  \n",
        "and visualized to demonstrate the full data-preparation pipeline.\n",
        "\n",
        "**Limitations:**  \n",
        "- The forecast data can change over time.  \n",
        "- Wikipedia scraping may not include all attractions.\n",
        "\n"
      ],
      "metadata": {
        "id": "1EBmyAL_GWqX"
      }
    }
  ]
}
